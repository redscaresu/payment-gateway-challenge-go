// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/ehsanashouri/go/src/github.com/redscaresu/payment-gateway-challenge-go-1/internal/domain/postpayment.go
//
// Generated by this command:
//
//	mockgen -source=/Users/ehsanashouri/go/src/github.com/redscaresu/payment-gateway-challenge-go-1/internal/domain/postpayment.go -destination=/Users/ehsanashouri/go/src/github.com/redscaresu/payment-gateway-challenge-go-1/internal/domain/mocks/mock_postpayment.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/cko-recruitment/payment-gateway-challenge-go/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockPaymentService is a mock of PaymentService interface.
type MockPaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceMockRecorder
	isgomock struct{}
}

// MockPaymentServiceMockRecorder is the mock recorder for MockPaymentService.
type MockPaymentServiceMockRecorder struct {
	mock *MockPaymentService
}

// NewMockPaymentService creates a new mock instance.
func NewMockPaymentService(ctrl *gomock.Controller) *MockPaymentService {
	mock := &MockPaymentService{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentService) EXPECT() *MockPaymentServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPaymentService) Create(request *models.PostPaymentHandlerRequest) (*models.PostPaymentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", request)
	ret0, _ := ret[0].(*models.PostPaymentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockPaymentServiceMockRecorder) Create(request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPaymentService)(nil).Create), request)
}
